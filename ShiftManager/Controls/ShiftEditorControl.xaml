<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:local="clr-namespace:ShiftManager.Controls"
  xmlns:root="clr-namespace:ShiftManager">

  <root:HasFlagConverter x:Key="HasFlagConv"/>
  <root:TimeSpanTo24HOverStringConverter x:Key="TimeSpanTo24HOverStringConv"/>
  <root:DateTimeTo24HOverStringConverter x:Key="DateTimeTo24HOverStringConv"/>
  <root:ValueConverterGroup x:Key="ENumFlagToVisibilityConv">
    <root:ValueConverterGroup.Converters>
      <root:HasFlagConverter/>
      <BooleanToVisibilityConverter/>
    </root:ValueConverterGroup.Converters>
  </root:ValueConverterGroup>

  <Style TargetType="Button">
    <Setter Property="Margin" Value="4"/>
    <Setter Property="Padding" Value="4"/>
  </Style>
  
  <Style TargetType="{x:Type local:ShiftEditorControl}">
    <Setter Property="VisibleElements" Value="{x:Static local:ShiftEditorControl.FullBitsOfElements}"/>
    <Setter Property="EditableElements" Value="{x:Static local:ShiftEditorControl.FullBitsOfElements}"/>
    
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:ShiftEditorControl}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="auto"/>
              <ColumnDefinition Width="auto"/>
              <ColumnDefinition Width="auto"/>
              <ColumnDefinition Width="auto"/>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="auto"/>
              <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <ContentControl
              Content="{TemplateBinding Content}"
              IsEnabled="{TemplateBinding EditableElements, Converter={StaticResource HasFlagConv}, ConverterParameter={x:Static local:ShiftEditorElements.Text}}"
              Visibility="{TemplateBinding VisibleElements, Converter={StaticResource ENumFlagToVisibilityConv}, ConverterParameter={x:Static local:ShiftEditorElements.Text}}"
              HorizontalContentAlignment="Center"
              Width="80"
              Grid.Column="0"
              Margin="4"
              Padding="4"/>

            <!--出勤時刻-->
            <TextBox
              IsEnabled="{TemplateBinding EditableElements, Converter={StaticResource HasFlagConv}, ConverterParameter={x:Static local:ShiftEditorElements.AttendTime}}"
              Visibility="{TemplateBinding VisibleElements, Converter={StaticResource ENumFlagToVisibilityConv}, ConverterParameter={x:Static local:ShiftEditorElements.AttendTime}}"
              HorizontalContentAlignment="Center"
              Width="50"
              Grid.Column="1"
              Margin="4"
              Padding="4">
              <MultiBinding UpdateSourceTrigger="PropertyChanged">
                <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="AttendanceTime"/>
                <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="WorkDate"/>

                <MultiBinding.Converter>
                  <!--DateTimeTo24HOverStringConverterは各箇所でインスタンスを生成して使用する-->
                  <root:DateTimeTo24HOverStringConverter/>
                </MultiBinding.Converter>
                <MultiBinding.ValidationRules>
                  <root:HHMMValidationRule/>
                </MultiBinding.ValidationRules>
              </MultiBinding>
            </TextBox>

            <!--退勤時刻-->
            <TextBox
              IsEnabled="{TemplateBinding EditableElements, Converter={StaticResource HasFlagConv}, ConverterParameter={x:Static local:ShiftEditorElements.LeaveTime}}"
              Visibility="{TemplateBinding VisibleElements, Converter={StaticResource ENumFlagToVisibilityConv}, ConverterParameter={x:Static local:ShiftEditorElements.LeaveTime}}"
              HorizontalContentAlignment="Center"
              Width="50"
              Grid.Column="2"
              Margin="4"
              Padding="4">
              <MultiBinding UpdateSourceTrigger="PropertyChanged">
                <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="LeavingTime"/>
                <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="WorkDate"/>

                <MultiBinding.Converter>
                  <!--DateTimeTo24HOverStringConverterは各箇所でインスタンスを生成して使用する-->
                  <root:DateTimeTo24HOverStringConverter/>
                </MultiBinding.Converter>
                <MultiBinding.ValidationRules>
                  <root:HHMMValidationRule/>
                </MultiBinding.ValidationRules>
              </MultiBinding>
            </TextBox>

            <!--休憩時刻-->
            <Button
              x:Name="BreakTimePopupOpenButton"
              Visibility="{TemplateBinding VisibleElements, Converter={StaticResource ENumFlagToVisibilityConv}, ConverterParameter={x:Static local:ShiftEditorElements.BreakTime}}"
              HorizontalContentAlignment="Center"
              Width="140"
              Margin="4"
              Padding="4"
              HorizontalAlignment="Stretch"
              Command="{x:Static local:ShiftEditorControl.BreakTimePopupOpenButtonClickedCommand}"
              CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"
              Grid.Column="3"
              Content="{Binding ElementName=BreakTimeEditor, Path=SelectionText}"/>
            <Popup
              x:Name="BreakTimePopup"
              Visibility="{TemplateBinding VisibleElements, Converter={StaticResource ENumFlagToVisibilityConv}, ConverterParameter={x:Static local:ShiftEditorElements.BreakTime}}"
              IsOpen="{TemplateBinding BreakTimePopupState}"
              AllowsTransparency="True"
              PopupAnimation="Fade"
              StaysOpen="False"
              PlacementTarget="{Binding ElementName=BreakTimePopupOpenButton}">
              <local:BreakTimeEditorControl
                x:Name="BreakTimeEditor"
                IsEnabled="{TemplateBinding EditableElements, Converter={StaticResource HasFlagConv}, ConverterParameter={x:Static local:ShiftEditorElements.BreakTime}}"
                TargetDate="{TemplateBinding WorkDate}"
                BreakTimeDictionary="{Binding BreakTimeDictionary, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"/>
            </Popup>

            <local:ShiftEditorBarControl
              IsEnabled="{TemplateBinding EditableElements, Converter={StaticResource HasFlagConv}, ConverterParameter={x:Static local:ShiftEditorElements.ShiftBar}}"
              Visibility="{TemplateBinding VisibleElements, Converter={StaticResource ENumFlagToVisibilityConv}, ConverterParameter={x:Static local:ShiftEditorElements.ShiftBar}}"
              Grid.Column="4"
              Margin="4"
              Background="Aqua"/>
              

            <TextBox
              IsEnabled="{TemplateBinding EditableElements, Converter={StaticResource HasFlagConv}, ConverterParameter={x:Static local:ShiftEditorElements.WorkTimeLen}}"
              Visibility="{TemplateBinding VisibleElements, Converter={StaticResource ENumFlagToVisibilityConv}, ConverterParameter={x:Static local:ShiftEditorElements.WorkTimeLen}}"
              Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=WorkTimeLenForeground, Mode=OneWay}"
              HorizontalContentAlignment="Center"
              Width="50"
              Grid.Column="5"
              Margin="4"
              Padding="4">
              <Binding
                Path="WorkTimeLength"
                RelativeSource="{RelativeSource Mode=TemplatedParent}"
                Converter="{StaticResource TimeSpanTo24HOverStringConv}"
                UpdateSourceTrigger="PropertyChanged">
                <Binding.ValidationRules>
                  <root:HHMMValidationRule/>
                </Binding.ValidationRules>
              </Binding>
            </TextBox>


            <Button
              IsEnabled="{TemplateBinding EditableElements, Converter={StaticResource HasFlagConv}, ConverterParameter={x:Static local:ShiftEditorElements.DeleteButton}}"
              Visibility="{TemplateBinding VisibleElements, Converter={StaticResource ENumFlagToVisibilityConv}, ConverterParameter={x:Static local:ShiftEditorElements.DeleteButton}}"
              Command="{x:Static local:ShiftEditorControl.DeleteButtonClickedCommand}"
              CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"
              HorizontalContentAlignment="Center"
              Width="50"
              Grid.Column="6"
              Margin="4"
              Padding="4"
              Content="Delete"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  
</ResourceDictionary>